// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id                   String             @id @default(uuid())
  studentId            String
  firstName            String
  lastName             String
  middleName           String
  dateOfBirth          DateTime
  email                String             @unique
  profileImage         String
  contactNo            String
  gender               String
  academicFacultyId    String
  academicFaculty      AcademicFaculty    @relation(fields: [academicFacultyId], references: [id])
  academicDepartmentId String
  academicDepartment   AcademicDepartment @relation(fields: [academicDepartmentId], references: [id])
  academicSemesterId   String
  academicSemester     AcademicSemester   @relation(fields: [academicSemesterId], references: [id])
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt

  @@map("students")
}

model Faculty {
  id           String   @id @default(uuid())
  facultyId    String
  firstName    String
  lastName     String
  middleName   String
  dateOfBirth  DateTime
  email        String   @unique
  profileImage String
  contactNo    String
  gender       String
  designation  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  academicFacultyId String
  academicFaculty   AcademicFaculty @relation(fields: [academicFacultyId], references: [id])

  academicDepartmentId String
  academicDepartment   AcademicDepartment @relation(fields: [academicDepartmentId], references: [id])

  @@map("faculties")
}

model AcademicFaculty {
  id                  String               @id @default(uuid())
  title               String               @unique
  students            Student[]
  academicDepartments AcademicDepartment[]
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  faculties           Faculty[]

  @@map("academicFaculties")
}

model AcademicDepartment {
  id                String          @id @default(uuid())
  title             String
  academicFacultyId String
  academicFaculty   AcademicFaculty @relation(fields: [academicFacultyId], references: [id])
  students          Student[]
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  faculties         Faculty[]

  @@map("academicDepartments")
}

model AcademicSemester {
  id         String    @id @default(uuid())
  title      String
  year       Int
  code       String
  startMonth String
  endMonth   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  students   Student[]

  @@map("academicSemesters")
}

model Course {
  id              String                 @id @default(uuid())
  title           String
  code            String
  credits         Int                    @default(0)
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
  prerequisite    CourseToPrerequisite[] @relation("CourseToPrerequisite")
  prerequisiteFor CourseToPrerequisite[] @relation("PrerequisteToCourse")

  @@map("courses")
}

model CourseToPrerequisite {
  courseId String
  course   Course @relation(fields: [courseId], references: [id], name: "CourseToPrerequisite")

  prerequisiteId String
  prerequisite   Course @relation(fields: [prerequisiteId], references: [id], name: "PrerequisteToCourse")

  @@id([courseId, prerequisiteId])
}

model Building {
  id        String   @id @default(uuid())
  title     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rooms Room[]

  @@map("buildings")
}

model Room {
  id         String @id @default(uuid())
  roomNumber String
  floor      String

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  buildingId String
  building   Building @relation(fields: [buildingId], references: [id])

  @@map("rooms")
}
